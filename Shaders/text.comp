#version 450

layout (local_size_x = 16) in;

layout(push_constant) uniform PushConstants {
    ivec2 resolution;
    int numChars;
    float charWidth;
    float charHeight;
    float texWidth;
    float texHeight;
    int texCols;
    int texRows;
    ivec2 startPos;
} pc;

layout(binding = 0) buffer VertexBuffer {
    vec4 vertices[]; // x, y, u, v
};

layout(binding = 1) buffer TextBuffer {
    int characters[];
};

void main()
{
    uint index = gl_GlobalInvocationID.x;

    if (index >= pc.numChars) {
        return;
    }

    int charCode = characters[index];

    float x = pc.startPos.x + float(index) * pc.charWidth;
    float y = pc.startPos.y;

    int row = charCode / pc.texCols;
    int col = charCode % pc.texCols;

    float u = float(col) / pc.texCols;
    float v = float(row) / pc.texRows;
    float du = 1.0 / pc.texCols;
    float dv = 1.0 / pc.texRows;

    vertices[index * 4 + 0] = vec4(x, y, u, v);
    vertices[index * 4 + 1] = vec4(x + pc.charWidth, y, u + du, v);
    vertices[index * 4 + 2] = vec4(x + pc.charWidth, y + pc.charHeight, u + du, v + dv);
    vertices[index * 4 + 3] = vec4(x, y + pc.charHeight, u, v + dv);
}